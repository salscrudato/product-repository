rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for role-based access control
    function getUserRole() {
      return request.auth.token.role;
    }

    function isAdmin() {
      return getUserRole() == 'admin';
    }

    function isProductManager() {
      return getUserRole() == 'product_manager';
    }

    function isUnderwriter() {
      return getUserRole() == 'underwriter';
    }

    function isViewer() {
      return getUserRole() == 'viewer';
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    // Products collection
    match /products/{productId} {
      // Admin and product managers can read/write
      // Underwriters can read
      // Viewers can read
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin() || isProductManager();

      // Nested coverages
      match /coverages/{coverageId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin() || isProductManager();

        // Limits subcollection
        match /limits/{limitId} {
          allow read: if isAuthenticated();
          allow create, update, delete: if isAdmin() || isProductManager();
        }

        // Deductibles subcollection
        match /deductibles/{deductibleId} {
          allow read: if isAuthenticated();
          allow create, update, delete: if isAdmin() || isProductManager();
        }

        // Versions subcollection
        match /versions/{versionId} {
          allow read: if isAuthenticated();
          allow create, update: if isAdmin() || isProductManager();
          allow delete: if isAdmin();
        }
      }

      // Packages subcollection
      match /packages/{packageId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin() || isProductManager();
      }

      // Pricing steps subcollection
      match /pricingSteps/{stepId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin() || isProductManager() || isUnderwriter();
      }

      // Data dictionary subcollection
      match /dataDictionary/{fieldId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin() || isProductManager();
      }
    }

    // Forms collection
    match /forms/{formId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin() || isProductManager();
    }

    // Form-Coverage mappings (junction table)
    match /formCoverages/{mappingId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin() || isProductManager();
    }

    // Rules collection
    match /rules/{ruleId} {
      allow read: if isAuthenticated();
      allow create, update: if isAdmin() || isProductManager() || isUnderwriter();
      allow delete: if isAdmin() || isProductManager();
    }

    // Pricing rules collection
    match /pricingRules/{ruleId} {
      allow read: if isAuthenticated();
      allow create, update: if isAdmin() || isProductManager() || isUnderwriter();
      allow delete: if isAdmin() || isProductManager();
    }

    // State applicability
    match /stateApplicability/{docId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin() || isProductManager();
    }

    // Versions (global)
    match /versions/{versionId} {
      allow read: if isAuthenticated();
      allow create, update: if isAdmin() || isProductManager();
      allow delete: if isAdmin();
    }

    // Catch-all: deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}